"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[3328],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=a,f=c["".concat(p,".").concat(u)]||c[u]||m[u]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:9},i="Modules",l={unversionedId:"wf-course/typescript-revisited/modules",id:"wf-course/typescript-revisited/modules",title:"Modules",description:"Hoe modules gebruiken in TypeScript?",source:"@site/docs/wf-course/typescript-revisited/modules.md",sourceDirName:"wf-course/typescript-revisited",slug:"/wf-course/typescript-revisited/modules",permalink:"/webframeworks-cursus/wf-course/typescript-revisited/modules",draft:!1,tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"wfCourse",previous:{title:"Immutability",permalink:"/webframeworks-cursus/wf-course/typescript-revisited/immutability"},next:{title:"React app aanmaken",permalink:"/webframeworks-cursus/wf-course/create-react-app/"}},p={},s=[{value:"Hoe modules gebruiken in TypeScript?",id:"hoe-modules-gebruiken-in-typescript",level:2},{value:"Export",id:"export",level:3},{value:"Import",id:"import",level:3},{value:"Interfaces exporteren",id:"interfaces-exporteren",level:3}],d={toc:s};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"modules"},"Modules"),(0,a.kt)("h2",{id:"hoe-modules-gebruiken-in-typescript"},"Hoe modules gebruiken in TypeScript?"),(0,a.kt)("p",null,"Een module is een bestand dat variabelen, functies, interfaces of klassen bevat. Je kan sommige van deze publiekelijk beschikbaar maken zodat deze zichtbaar zijn vanuit andere modules. Dit doe je door deze te ",(0,a.kt)("strong",{parentName:"p"},"exporteren"),". Objecten die niet ge-exporteerd zijn zijn private. "),(0,a.kt)("h3",{id:"export"},"Export"),(0,a.kt)("p",null,"Om te laten zien hoe modules werken zullen we een heel simpele ",(0,a.kt)("inlineCode",{parentName:"p"},"Math")," module maken. We maken hiervoor een bestand ",(0,a.kt)("inlineCode",{parentName:"p"},"math.ts")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'codesandbox={"template": "typescript-math-module", "filename": "math.ts" }',codesandbox:'{"template":','"typescript-math-module",':!0,'"filename":':!0,'"math.ts"':!0,"}":!0},"// public door het export keyword.\nexport const add = (a: number, b: number): number => {\n    log(`${a} + ${b}`);\n    return a + b;\n}\n\n// private.\nexport const log = (message: string): void => {\n    console.log(message);\n}\n\n// Mogelijk om 1 object als 'default' te exporteren.\nexport default add;\n")),(0,a.kt)("h3",{id:"import"},"Import"),(0,a.kt)("p",null,"Het import keyword laat het toe om ge-exporteerde functies van een andere module te gebruiken. In dit geval willen we de ",(0,a.kt)("inlineCode",{parentName:"p"},"add")," functie gebruiken van de Math module."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'codesandbox={"template": "typescript-math-module", "filename": "index.ts" }',codesandbox:'{"template":','"typescript-math-module",':!0,'"filename":':!0,'"index.ts"':!0,"}":!0},'// We willen de add functie gebruiken van de math module\nimport { add } from "./math";\n\nconsole.log(add(1, 2));\n')),(0,a.kt)("p",null,"Als we alle ge-exporteerde functies willen gebruiken van een module kunnen we de * syntax gebruiken."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'codesandbox={"template": "typescript-math-module", "filename": "index.ts" }',codesandbox:'{"template":','"typescript-math-module",':!0,'"filename":':!0,'"index.ts"':!0,"}":!0},'// De math module als namespace importeren\nimport * as Math from "./math";\n\n// We gebruiken de add methode in de namespace math\nconsole.log(Math.add(1, 2));\n')),(0,a.kt)("p",null,"Willen we enkel de default export gebruiken dan laten we de accolades weg."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'codesandbox={"template": "typescript-math-module", "filename": "index.ts" }',codesandbox:'{"template":','"typescript-math-module",':!0,'"filename":':!0,'"index.ts"':!0,"}":!0},'// De math module als namespace importeren\nimport add from "./math";\n\n// We gebruiken de add methode in de namespace math\nconsole.log(add(1, 2));\n')),(0,a.kt)("h3",{id:"interfaces-exporteren"},"Interfaces exporteren"),(0,a.kt)("p",null,"Vaak plaats je alle interfaces die met een bepaald model te maken hebben in een apart bestand. Je kan deze ook gewoon exporteren en importeren zoals je dat deed hiervoor."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface Student {\n    name: string;\n    age: number\n}\n\nexport interface Course {\n    name: string;\n    description: string;\n    credits: number;\n}\n")),(0,a.kt)("p",null,"en dan kan je deze importeren via het import keyword:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import { Student, Course } from "./interfaces"\n')))}m.isMDXComponent=!0}}]);