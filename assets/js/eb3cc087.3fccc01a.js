"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[8002],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(96540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},76190:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"react-native-course/labs/project-opdracht","title":"Project Webframeworks","description":"\ud83e\udd45 Overzicht en Leerdoelen","source":"@site/docs/react-native-course/labs/project-opdracht.md","sourceDirName":"react-native-course/labs","slug":"/react-native-course/labs/project-opdracht","permalink":"/webframeworks-cursus/react-native-course/labs/project-opdracht","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"reactNative","previous":{"title":"Labo 6","permalink":"/webframeworks-cursus/react-native-course/labs/lab6"}}');var i=t(74848),a=t(28453);const r={},l="Project Webframeworks",c={},o=[{value:"\ud83e\udd45 Overzicht en Leerdoelen",id:"-overzicht-en-leerdoelen",level:2},{value:"\ud83d\udd0d Project Webframeworks",id:"-project-webframeworks",level:2},{value:"\ud83d\udee0\ufe0f Opdrachten",id:"\ufe0f-opdrachten",level:2},{value:"opdracht 1: functionele analyse",id:"opdracht-1-functionele-analyse",level:3},{value:"opdracht 2: implementatie",id:"opdracht-2-implementatie",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"project-webframeworks",children:"Project Webframeworks"})}),"\n",(0,i.jsx)(n.h2,{id:"-overzicht-en-leerdoelen",children:"\ud83e\udd45 Overzicht en Leerdoelen"}),"\n",(0,i.jsx)(n.p,{children:"Met deze opdracht werk je aan de volgende leerdoelen:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"De student maakt een mobiele app vertrekkend van een functionele analyse"}),"\n",(0,i.jsx)(n.li,{children:"De student maakt applicaties in react js"}),"\n",(0,i.jsx)(n.li,{children:"De student maakt componenten met properties, hooks en states"}),"\n",(0,i.jsx)(n.li,{children:"De student maakt gebruik van een routing library voor een applicatie met meerdere pagina\u2019s"}),"\n",(0,i.jsx)(n.li,{children:"De student maakt componenten die met elkaar communiceren aan de hand van een gedeelde state"}),"\n",(0,i.jsx)(n.li,{children:"De student maakt web applicaties die gebruik maken van externe web services"}),"\n",(0,i.jsx)(n.li,{children:"De student bouwt een user interface met gebruik van een UI component library"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-project-webframeworks",children:"\ud83d\udd0d Project Webframeworks"}),"\n",(0,i.jsxs)(n.p,{children:["In deze opdracht maak je gebruik van React Native om een mobiele applicatie te maken. Je maakt deze opdracht ",(0,i.jsx)(n.strong,{children:"individueel"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Je kiest een onderwerp op basis van ",(0,i.jsx)(n.a,{href:"https://sampleapis.assimilate.be/",children:"de beschikbare APIs"}),", ",(0,i.jsx)(n.strong,{children:"met uitzondering van de API die we gebruiken als voorbeeld in de les"}),". Je kan de lijst met beschikbare APIs (en hun endpoints) terugvinden op ",(0,i.jsx)(n.a,{href:"https://sampleapis.assimilate.be/",children:"https://sampleapis.assimilate.be/"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"\ufe0f-opdrachten",children:"\ud83d\udee0\ufe0f Opdrachten"}),"\n",(0,i.jsx)(n.h3,{id:"opdracht-1-functionele-analyse",children:"opdracht 1: functionele analyse"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Het functioneel design beschrijft de functionaliteiten van je mobiele applicatie zonder technische details, het toont ",(0,i.jsx)(n.em,{children:"wat"})," er gaat komen."]}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Teken een grey-boxed ontwerp/wireframe van elk scherm in je applicatie."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Beschrijf op elk scherm de verschillende functies van de elementen op het scherm."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"opdracht-2-implementatie",children:"opdracht 2: implementatie"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Werk je mobiele applicatie verder uit met behulp van React Native."}),"\n",(0,i.jsx)(n.p,{children:"Je applicatie moet:"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","minstens 3 screens bevatten, die je via routing kan bereiken."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","een flatlist of scrollview gebruiken."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","een API aanspreken met een GET request om data op te halen. Je kan kiezen uit ",(0,i.jsx)(n.a,{href:"https://sampleapis.assimilate.be/",children:"deze lijst van beschikbare APIs"}),"."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","dezelfde API aanspreken met een POST/PUT request om data toe te voegen of aan te passen."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","gebruik maken van AsyncStorage."]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","2 of meer Expo components gebruiken. (filesystem, camera, map, notification, imagepicker, location, calendar,...)"]}),"\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","styling toepassen waarbij je de nadruk legt op UX."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Tijdens het ontwikkelen let je op de volgende zaken:"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Je hanteert een clean code style","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"opdelen in verschillende componenten"}),"\n",(0,i.jsx)(n.li,{children:"gebruik maken van verschillende files"}),"\n",(0,i.jsxs)(n.li,{children:["volgen van coding guidelines",(0,i.jsx)(n.br,{}),"\n","bv.:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/MDN/Writing_guidelines/Writing_style_guide/Code_style_guide/JavaScript",children:"MDN JS coding guidelines"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://google.github.io/styleguide/tsguide.html",children:"Google TS coding guidelines"})}),"\n",(0,i.jsx)(n.li,{children:"..."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);