"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[3081],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),c=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(p.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=c(r),u=a,d=m["".concat(p,".").concat(u)]||m[u]||f[u]||o;return r?n.createElement(d,i(i({ref:t},s),{},{components:r})):n.createElement(d,i({ref:t},s))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1036:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={},i="Platform Specific Code",l={unversionedId:"react-native-course/extra/platform-specific-code",id:"react-native-course/extra/platform-specific-code",title:"Platform Specific Code",description:"Soms wil je code schrijven die alleen op een bepaald platform werkt. Bijvoorbeeld, je wilt een knop maken die alleen op iOS werkt. In dit geval kun je de Platform API gebruiken om te controleren of je op iOS of Android werkt.",source:"@site/docs/react-native-course/extra/platform-specific-code.md",sourceDirName:"react-native-course/extra",slug:"/react-native-course/extra/platform-specific-code",permalink:"/webframeworks-cursus/react-native-course/extra/platform-specific-code",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"reactNative",previous:{title:"MapView",permalink:"/webframeworks-cursus/react-native-course/extra/map-view"},next:{title:"Labo",permalink:"/webframeworks-cursus/react-native-course/labs/"}},p={},c=[{value:"Platform API",id:"platform-api",level:2},{value:"Platform specifieke style",id:"platform-specifieke-style",level:2}],s={toc:c};function f(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"platform-specific-code"},"Platform Specific Code"),(0,a.kt)("p",null,"Soms wil je code schrijven die alleen op een bepaald platform werkt. Bijvoorbeeld, je wilt een knop maken die alleen op iOS werkt. In dit geval kun je de ",(0,a.kt)("inlineCode",{parentName:"p"},"Platform")," API gebruiken om te controleren of je op iOS of Android werkt."),(0,a.kt)("h2",{id:"platform-api"},"Platform API"),(0,a.kt)("p",null,"De ",(0,a.kt)("inlineCode",{parentName:"p"},"Platform")," API is een globale variabele die je kunt importeren vanuit ",(0,a.kt)("inlineCode",{parentName:"p"},"react-native"),". Deze variabele heeft twee eigenschappen: ",(0,a.kt)("inlineCode",{parentName:"p"},"OS")," en ",(0,a.kt)("inlineCode",{parentName:"p"},"Version"),". De ",(0,a.kt)("inlineCode",{parentName:"p"},"OS")," eigenschap geeft aan of je op iOS of Android werkt. De ",(0,a.kt)("inlineCode",{parentName:"p"},"Version")," eigenschap geeft het versienummer van het platform."),(0,a.kt)("p",null,"De onderstaande code laat zien hoe je alle informatie van het platform kan ophalen:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"expo={}",expo:"{}"},'import React from "react";\nimport { Platform, View, Text } from "react-native";\n\nconst App = () => {\n    return (\n        <View>\n            <Text>Platform</Text>\n            <Text>OS: {Platform.OS}</Text>\n            <Text>Version: {Platform.Version}</Text>\n\n            {Platform.OS === "ios" && <Text>Je werkt op iOS</Text>}\n            {Platform.OS === "android" && <Text>Je werkt op Android</Text>}\n        </View>\n    );\n};\n\nexport default App;\n')),(0,a.kt)("h2",{id:"platform-specifieke-style"},"Platform specifieke style"),(0,a.kt)("p",null,"Soms wil je een style toepassen die alleen op een bepaald platform werkt. In dit geval kun je de ",(0,a.kt)("inlineCode",{parentName:"p"},"Platform.select")," functie gebruiken om een style te selecteren op basis van het platform."),(0,a.kt)("p",null,"De onderstaande code laat zien hoe je een style kan selecteren op basis van het platform:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:"expo={}",expo:"{}"},'import React from "react";\nimport { Platform, View, Text, StyleSheet } from "react-native";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    ...Platform.select({\n      android: {\n        backgroundColor: "green",\n      },\n      ios: {\n        backgroundColor: "red",\n      },\n      default: {\n        backgroundColor: "blue",\n      },\n    }),\n  },\n});\n\nconst App = () => {\n  return <View style={styles.container}></View>;\n};\n\nexport default App;\n')))}f.isMDXComponent=!0}}]);