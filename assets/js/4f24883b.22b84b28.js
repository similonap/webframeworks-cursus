"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[4180],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var a=t(96540);const r={},o=a.createContext(r);function i(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:n},e.children)}},43182:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>s});const a=JSON.parse('{"id":"react-native-course/extra/map-view","title":"MapView","description":"react-native-maps zorgt voor een interactieve kaart in React Native. We kunnen hiermee een kaart tonen en markers op de kaart plaatsen.","source":"@site/docs/react-native-course/extra/map-view.md","sourceDirName":"react-native-course/extra","slug":"/react-native-course/extra/map-view","permalink":"/webframeworks-cursus/react-native-course/extra/map-view","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"reactNative","previous":{"title":"Location","permalink":"/webframeworks-cursus/react-native-course/extra/location"},"next":{"title":"Platform Specific Code","permalink":"/webframeworks-cursus/react-native-course/extra/platform-specific-code"}}');var r=t(74848),o=t(28453);const i={},d="MapView",l={},s=[{value:"Installatie",id:"installatie",level:2},{value:"Gebruik",id:"gebruik",level:2},{value:"Markers",id:"markers",level:2},{value:"Meer informatie",id:"meer-informatie",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"mapview",children:"MapView"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"react-native-maps"})," zorgt voor een interactieve kaart in React Native. We kunnen hiermee een kaart tonen en markers op de kaart plaatsen."]}),"\n",(0,r.jsx)(n.h2,{id:"installatie",children:"Installatie"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"react-native-maps"})," is een externe library die we moeten installeren. We kunnen dit doen met de ",(0,r.jsx)(n.code,{children:"expo install"})," commando:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx expo install react-native-maps\n"})}),"\n",(0,r.jsx)(n.h2,{id:"gebruik",children:"Gebruik"}),"\n",(0,r.jsxs)(n.p,{children:["Om heel eenvoudig een kaart te tonen in React Native moeten we de ",(0,r.jsx)(n.code,{children:"MapView"})," component gebruiken. Deze component heeft een ",(0,r.jsx)(n.code,{children:"region"})," prop die we kunnen gebruiken om de initiele regio van de kaart te bepalen. We willen deze dynamisch maken, dus we zullen de ",(0,r.jsx)(n.code,{children:"region"})," prop binden aan een state variabele."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"latitudeDelta"})," en ",(0,r.jsx)(n.code,{children:"longitudeDelta"})," bepalen hoeveel van de kaart we willen tonen. Hoe kleiner deze waarden, hoe meer van de kaart we zien."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'expo={"dependencies":"react-native-maps"}',children:'import React, { useState } from "react";\nimport { View, Text, Button } from "react-native";\nimport MapView, { Region, Coordinate } from "react-native-maps";\n//hide-start\ninterface WorldWonder {\n  name: string;\n  latitude: number;\n  longitude: number;\n}\n\nconst worldWonders: WorldWonder[] = [\n  { name: "AP Hogeschool", latitude: 51.2167, longitude: 4.4167 },\n  { name: "Great Pyramid of Giza", latitude: 29.9792, longitude: 31.1344 },\n  { name: "Hanging Gardens of Babylon", latitude: 32.5317, longitude: 44.428 },\n  { name: "Colossus of Rhodes", latitude: 36.4404, longitude: 28.2241 },\n  { name: "Lighthouse of Alexandria", latitude: 31.2156, longitude: 29.9553 },\n  { name: "Statue of Zeus at Olympia", latitude: 37.6381, longitude: 21.6203 },\n  { name: "Temple of Artemis", latitude: 37.951, longitude: 27.3683 },\n  { name: "Mausoleum at Halicarnassus", latitude: 37.0372, longitude: 27.4251 },\n];\n//hide-end\nconst App = () => {\n  let [wonder, setWonder] = useState<WorldWonder>(worldWonders[0]);\n\n  const showRandomWonder = () => {\n    let randomIndex = Math.floor(Math.random() * worldWonders.length);\n    setWonder(worldWonders[randomIndex]);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <MapView\n        style={{ flex: 1 }}\n        region={{\n          latitude: wonder.latitude,\n          longitude: wonder.longitude,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421,\n        }}\n      />\n      <Button title="Set random location" onPress={showRandomWonder} />\n    </View>\n  );\n};\n\nexport default App;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"markers",children:"Markers"}),"\n",(0,r.jsxs)(n.p,{children:["We kunnen markers op de kaart plaatsen door de ",(0,r.jsx)(n.code,{children:"Marker"})," component te gebruiken. Deze component heeft een ",(0,r.jsx)(n.code,{children:"coordinate"})," prop die we kunnen gebruiken om de positie van de marker te bepalen. We gaan in volgend voorbeeld een marker plaatsen op de kaart per wereldwonder."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'expo={"dependencies":"react-native-maps"}',children:'import React, { useState } from "react";\nimport { View, Text, Button } from "react-native";\nimport MapView, { Region, Coordinate } from "react-native-maps";\n//hide-start\ninterface WorldWonder {\n  name: string;\n  latitude: number;\n  longitude: number;\n}\n\nconst worldWonders: WorldWonder[] = [\n  { name: "AP Hogeschool", latitude: 51.2167, longitude: 4.4167 },\n  { name: "Great Pyramid of Giza", latitude: 29.9792, longitude: 31.1344 },\n  { name: "Hanging Gardens of Babylon", latitude: 32.5317, longitude: 44.428 },\n  { name: "Colossus of Rhodes", latitude: 36.4404, longitude: 28.2241 },\n  { name: "Lighthouse of Alexandria", latitude: 31.2156, longitude: 29.9553 },\n  { name: "Statue of Zeus at Olympia", latitude: 37.6381, longitude: 21.6203 },\n  { name: "Temple of Artemis", latitude: 37.951, longitude: 27.3683 },\n  { name: "Mausoleum at Halicarnassus", latitude: 37.0372, longitude: 27.4251 },\n];\n//hide-end\nconst App = () => {\n  let [wonder, setWonder] = useState<WorldWonder>(worldWonders[0]);\n\n  const showRandomWonder = () => {\n    let randomIndex = Math.floor(Math.random() * worldWonders.length);\n    setWonder(worldWonders[randomIndex]);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <MapView\n        style={{ flex: 1 }}\n        region={{\n          latitude: wonder.latitude,\n          longitude: wonder.longitude,\n          latitudeDelta: 0.0922,\n          longitudeDelta: 0.0421,\n        }}\n      >\n        {worldWonders.map((wonder) => (\n          <MapView.Marker\n            key={wonder.name}\n            coordinate={{\n              latitude: wonder.latitude,\n              longitude: wonder.longitude,\n            }}\n            title={wonder.name}\n          />\n        ))}\n      </MapView>\n      <Button title="Set random location" onPress={showRandomWonder} />\n    </View>\n  );\n};\n\nexport default App;\n'})}),"\n",(0,r.jsx)(n.h2,{id:"meer-informatie",children:"Meer informatie"}),"\n",(0,r.jsxs)(n.p,{children:["Voor meer informatie over ",(0,r.jsx)(n.code,{children:"react-native-maps"})," kan je de ",(0,r.jsx)(n.a,{href:"https://docs.expo.dev/versions/latest/sdk/map-view/",children:"documentatie"})," raadplegen."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);