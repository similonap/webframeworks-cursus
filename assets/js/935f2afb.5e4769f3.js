"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Inleiding","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Web Frameworks","href":"/webframeworks-cursus/inleiding/web-frameworks","docId":"inleiding/web-frameworks"},{"type":"link","label":"Single Page Applications","href":"/webframeworks-cursus/inleiding/single-page-applications","docId":"inleiding/single-page-applications"}],"href":"/webframeworks-cursus/"},{"type":"category","label":"TypeScript Revisited","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays/Objecten kopieren","href":"/webframeworks-cursus/typescript-revisited/arrays-objecten-kopieren","docId":"typescript-revisited/arrays-objecten-kopieren"},{"type":"link","label":"Optional chaining","href":"/webframeworks-cursus/typescript-revisited/optional-chaining","docId":"typescript-revisited/optional-chaining"},{"type":"link","label":"Lazy evaluation","href":"/webframeworks-cursus/typescript-revisited/lazy-evaluation","docId":"typescript-revisited/lazy-evaluation"},{"type":"link","label":"Array/Object Destructuring","href":"/webframeworks-cursus/typescript-revisited/array-object-destructuring","docId":"typescript-revisited/array-object-destructuring"},{"type":"link","label":"Callbacks/Function types","href":"/webframeworks-cursus/typescript-revisited/callbacks-function-types","docId":"typescript-revisited/callbacks-function-types"},{"type":"link","label":"Array Methoden","href":"/webframeworks-cursus/typescript-revisited/array-methoden","docId":"typescript-revisited/array-methoden"},{"type":"category","label":"Collections","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dictionary","href":"/webframeworks-cursus/typescript-revisited/collections/dictionary","docId":"typescript-revisited/collections/dictionary"},{"type":"link","label":"Sets","href":"/webframeworks-cursus/typescript-revisited/collections/sets","docId":"typescript-revisited/collections/sets"}],"href":"/webframeworks-cursus/typescript-revisited/collections/"},{"type":"link","label":"Immutability","href":"/webframeworks-cursus/typescript-revisited/immutability","docId":"typescript-revisited/immutability"}],"href":"/webframeworks-cursus/typescript-revisited/"},{"type":"link","label":"Create React App","href":"/webframeworks-cursus/create-react-app/","docId":"create-react-app/README"},{"type":"link","label":"TSX","href":"/webframeworks-cursus/tsx/","docId":"tsx/README"},{"type":"link","label":"Lijsten","href":"/webframeworks-cursus/lijsten/","docId":"lijsten/README"},{"type":"category","label":"Componenten","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Props","href":"/webframeworks-cursus/componenten/props","docId":"componenten/props"},{"type":"link","label":"Folder structuur","href":"/webframeworks-cursus/componenten/opsplitsen","docId":"componenten/opsplitsen"},{"type":"link","label":"Styling","href":"/webframeworks-cursus/componenten/stylen","docId":"componenten/stylen"}],"href":"/webframeworks-cursus/componenten/"}]},"docs":{"componenten/opsplitsen":{"id":"componenten/opsplitsen","title":"Folder structuur","description":"","sidebar":"tutorialSidebar"},"componenten/props":{"id":"componenten/props","title":"Props","description":"Componenten staan meestal niet zomaar op zichzelf. Vaak hebben ze data nodig dat van buitenaf komt. Afhankelijk van welke data er doorgegeven wordt aan het component zal het zich anders gedragen. Deze data worden doorgeven aan der hand van properties (of props in het kort).","sidebar":"tutorialSidebar"},"componenten/README":{"id":"componenten/README","title":"Componenten","description":"Code die gegenereerd wordt door create-react-app bevat \xe9\xe9n hoofdfunctie: App. Het is mogelijk alle code onder te brengen in deze functie, maar dan is het niet meer mogelijk (bijvoorbeeld in een later project) een onderdeeltje van de applicatie te herbruiken. Het is beter de applicatie op te splitsen in kleine herbruikbare blokjes. Deze herbruikbare blokjes heten componenten.","sidebar":"tutorialSidebar"},"componenten/stylen":{"id":"componenten/stylen","title":"Styling","description":"","sidebar":"tutorialSidebar"},"create-react-app/README":{"id":"create-react-app/README","title":"Create React App","description":"Create React App","sidebar":"tutorialSidebar"},"inleiding/README":{"id":"inleiding/README","title":"Inleiding","description":"","sidebar":"tutorialSidebar"},"inleiding/single-page-applications":{"id":"inleiding/single-page-applications","title":"Single Page Applications","description":"In deze cursus gaan we voornamelijk kijken naar het meest gebruikte Single Page Applications framework namelijk React.js (ontwikkeld door Meta). Er zijn nog vele andere SPA-frameworks zoals Angular (door Google) en Vue.js. Deze frameworks laten het toe om eenvoudig uitgebreidere applicaties te maken dan met gewone JavaScript en algemene frameworks zoals jQuery.","sidebar":"tutorialSidebar"},"inleiding/web-frameworks":{"id":"inleiding/web-frameworks","title":"Web Frameworks","description":"In principe kan je met HTML, CSS en JavaScript elke website die je maar kan bedenken laten werken. Dat geldt zowel voor de frontend als de backend. In de praktijk is dit voor complexe applicaties niet haalbaar. Een fontend met heel veel onderling afhankelijke elementen scripten met alleen JavaScript is onnoemelijk complex. Een backend zelf HTTP requests volledig laten ontleden is dat ook.","sidebar":"tutorialSidebar"},"lijsten/README":{"id":"lijsten/README","title":"Lijsten","description":"Lijsten in React","sidebar":"tutorialSidebar"},"tsx/README":{"id":"tsx/README","title":"TSX","description":"TSX is eigenlijk TypeScript code. Dus is het mogelijk TypeScript-expressies te integreren in de gegenereerde output. Als we de title variabele willen renderen tussen de h1 tags kunnen we deze als volgt toevoegen:","sidebar":"tutorialSidebar"},"typescript-revisited/array-methoden":{"id":"typescript-revisited/array-methoden","title":"Array Methoden","description":"Het is belangrijk om te weten dat in React.js bijna nooit gewone for lussen worden gebruikt. Het is vaak mogelijk om ze te gebruiken, maar het maakt de code bijna onleesbaar. Daarom is het kennen van array methoden een van de belangrijkste dingen die je moet kennen voordat je met React.js kan beginnen.&#x20;","sidebar":"tutorialSidebar"},"typescript-revisited/array-object-destructuring":{"id":"typescript-revisited/array-object-destructuring","title":"Array/Object Destructuring","description":"Vaak willen we bepaalde delen van een object of array op een gemakkelijke manier aanspreken zonder dit uitdrukkelijk te doen aan de hand van de dot notatie (bij objecten) en de index (bij arrays)","sidebar":"tutorialSidebar"},"typescript-revisited/arrays-objecten-kopieren":{"id":"typescript-revisited/arrays-objecten-kopieren","title":"Arrays/Objecten kopieren","description":"Arrays kopi\xebren","sidebar":"tutorialSidebar"},"typescript-revisited/callbacks-function-types":{"id":"typescript-revisited/callbacks-function-types","title":"Callbacks/Function types","description":"Een callback is een functie (functie A) die wordt meegegeven als parameter van een andere functie (functie B). Deze functie (B) zal dan de meegegeven functie (A) uitvoeren.","sidebar":"tutorialSidebar"},"typescript-revisited/collections/dictionary":{"id":"typescript-revisited/collections/dictionary","title":"Dictionary","description":"Soms weet je niet op voorhand welke keys en values een bepaald object gaat bevatten. Dit is bijvoorbeeld het geval bij dictionaries. Een dictionary is een ongeordende data structuur die een verzameling elementen bevat. Om een element te vinden, moet je de \\"key\\" sleutel van een element kennen.","sidebar":"tutorialSidebar"},"typescript-revisited/collections/README":{"id":"typescript-revisited/collections/README","title":"Collections","description":"","sidebar":"tutorialSidebar"},"typescript-revisited/collections/sets":{"id":"typescript-revisited/collections/sets","title":"Sets","description":"Soms wil je voorkomen dat bepaalde waarden meerdere keren voorkomen in een lijst. Je zou hiervoor elke keer kunnen nakijken of een bepaalde waarde al in de array zit zoals hieronder:","sidebar":"tutorialSidebar"},"typescript-revisited/immutability":{"id":"typescript-revisited/immutability","title":"Immutability","description":"Immutability of onveranderlijkheid is een heel belangrijk concept dat je onder de knie moet hebben. Eigenlijk is het een heel eenvoudig concept:","sidebar":"tutorialSidebar"},"typescript-revisited/lazy-evaluation":{"id":"typescript-revisited/lazy-evaluation","title":"Lazy evaluation","description":"Een belangrijk concept om te kennen in TypeScript is het concept van Lazy Evaluation. Dit wil zeggen dat een expressie niet helemaal wordt ge\xebvalueerd als het voorgaande deel al undefined/null of false is.","sidebar":"tutorialSidebar"},"typescript-revisited/optional-chaining":{"id":"typescript-revisited/optional-chaining","title":"Optional chaining","description":"Optional","sidebar":"tutorialSidebar"},"typescript-revisited/README":{"id":"typescript-revisited/README","title":"TypeScript Revisited","description":"Voordat we kunnen beginnen met React.js is het belangrijk om een aantal concepten van TypeScript nog eens te herhalen.","sidebar":"tutorialSidebar"}}}')}}]);