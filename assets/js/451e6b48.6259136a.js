"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[5592],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},v=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),v=p(t),g=r,m=v["".concat(s,".").concat(g)]||v[g]||d[g]||i;return t?a.createElement(m,o(o({ref:n},l),{},{components:t})):a.createElement(m,o({ref:n},l))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=v;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}v.displayName="MDXCreateElement"},2938:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={sidebar_position:2},o="Drawer Navigation",c={unversionedId:"react-native-course/navigation/drawer-navigation",id:"react-native-course/navigation/drawer-navigation",title:"Drawer Navigation",description:"Een drawer navigation is een navigatie die bestaat uit een menu dat uitgeklapt kan worden. Dit menu bevat links naar de verschillende schermen van de app. Je kan deze laten verschijnen door te swipen vanaf de linkerkant van het scherm of door op een knop te drukken.",source:"@site/docs/react-native-course/navigation/drawer-navigation.md",sourceDirName:"react-native-course/navigation",slug:"/react-native-course/navigation/drawer-navigation",permalink:"/webframeworks-cursus/react-native-course/navigation/drawer-navigation",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"reactNative",previous:{title:"Stack Navigation",permalink:"/webframeworks-cursus/react-native-course/navigation/stack-navigation"},next:{title:"Tab Navigation",permalink:"/webframeworks-cursus/react-native-course/navigation/tab-navigation"}},s={},p=[{value:"Installatie",id:"installatie",level:2},{value:"Gebruik",id:"gebruik",level:2},{value:"Openen en sluiten van de drawer",id:"openen-en-sluiten-van-de-drawer",level:2}],l={toc:p};function d(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"drawer-navigation"},"Drawer Navigation"),(0,r.kt)("p",null,"Een drawer navigation is een navigatie die bestaat uit een menu dat uitgeklapt kan worden. Dit menu bevat links naar de verschillende schermen van de app. Je kan deze laten verschijnen door te swipen vanaf de linkerkant van het scherm of door op een knop te drukken."),(0,r.kt)("h2",{id:"installatie"},"Installatie"),(0,r.kt)("p",null,"Voordat we kunnen beginnen moeten we eerst ",(0,r.kt)("inlineCode",{parentName:"p"},"@react-navigation/drawer")," installeren:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @react-navigation/drawer\n")),(0,r.kt)("p",null,"je moet ook nog ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native-gesture-handler")," en ",(0,r.kt)("inlineCode",{parentName:"p"},"react-native-reanimated")," installeren:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx expo install react-native-gesture-handler react-native-reanimated\n")),(0,r.kt)("h2",{id:"gebruik"},"Gebruik"),(0,r.kt)("p",null,"Om een drawer navigation te gebruiken moeten we eerst een ",(0,r.kt)("inlineCode",{parentName:"p"},"Drawer.Navigator")," component maken. Dit component bevat de verschillende schermen die we willen tonen in de drawer. Deze moet net zoals de ",(0,r.kt)("inlineCode",{parentName:"p"},"Stack.Navigator")," component in de ",(0,r.kt)("inlineCode",{parentName:"p"},"NavigationContainer")," component gezet worden."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'expo={"dependencies":"@react-navigation/drawer,react-native-screens,react-native-safe-area-context,@react-navigation/native,react-native-gesture-handler,react-native-reanimated"}',expo:'{"dependencies":"@react-navigation/drawer,react-native-screens,react-native-safe-area-context,@react-navigation/native,react-native-gesture-handler,react-native-reanimated"}'},'import { View, Text } from "react-native";\nimport { NavigationContainer } from "@react-navigation/native";\nimport { createDrawerNavigator } from "@react-navigation/drawer";\n\nconst Drawer = createDrawerNavigator();\n\nconst HomeScreen = () => {\n    return (\n        <View>\n            <Text>Home</Text>\n        </View>\n    );\n}\n\nconst SettingsScreen = () => {\n    return (\n        <View>\n            <Text>Settings</Text>\n        </View>\n    );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator useLegacyImplementation>\n        <Drawer.Screen name="Home" component={HomeScreen} />\n        <Drawer.Screen name="Settings" component={SettingsScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"We voegen ",(0,r.kt)("inlineCode",{parentName:"p"},"useLegacyImplementation")," toe aan de ",(0,r.kt)("inlineCode",{parentName:"p"},"Drawer.Navigator")," omdat we anders een foutmelding krijgen. Dit is een tijdelijke oplossing en zal in de toekomst niet meer nodig zijn.")),(0,r.kt)("p",null,"Voor meer informatie over de ",(0,r.kt)("inlineCode",{parentName:"p"},"Drawer.Navigator")," component kan je de ",(0,r.kt)("a",{parentName:"p",href:"https://reactnavigation.org/docs/drawer-based-navigation"},"documentatie")," raadplegen."),(0,r.kt)("h2",{id:"openen-en-sluiten-van-de-drawer"},"Openen en sluiten van de drawer"),(0,r.kt)("p",null,"Om de drawer programmatisch te openen of sluiten kan je gebruik maken van de ",(0,r.kt)("inlineCode",{parentName:"p"},"useNavigation")," hook. Deze hook geeft je toegang tot de ",(0,r.kt)("inlineCode",{parentName:"p"},"navigation")," object. Dit object bevat een ",(0,r.kt)("inlineCode",{parentName:"p"},"toggleDrawer")," functie die je kan gebruiken om de drawer te openen of sluiten."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'{6} expo={"dependencies":"@react-navigation/drawer,react-native-screens,react-native-safe-area-context,@react-navigation/native,react-native-gesture-handler,react-native-reanimated"}',"{6}":!0,expo:'{"dependencies":"@react-navigation/drawer,react-native-screens,react-native-safe-area-context,@react-navigation/native,react-native-gesture-handler,react-native-reanimated"}'},'//hide-start\nimport { View, Text, Button } from "react-native";\nimport { NavigationContainer,useNavigation } from "@react-navigation/native";\nimport { createDrawerNavigator } from "@react-navigation/drawer";\n\nconst Drawer = createDrawerNavigator();\n//hide-end\nconst HomeScreen = () => {\n    const navigation : any = useNavigation();\n    return (\n        <View style={{ flex: 1, justifyContent: "center", alignItems: "center" }}>\n            <Text>Home</Text>\n            <Button onPress={() => navigation.toggleDrawer()} title="Toggle Drawer"/>\n        </View>\n    );\n}\n//hide-start\nconst SettingsScreen = () => {\n    return (\n        <View style={{ flex: 1, justifyContent: "center", alignItems: "center" }}>\n            <Text>Settings</Text>\n        </View>\n    );\n}\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator useLegacyImplementation>\n        <Drawer.Screen name="Home" component={HomeScreen} />\n        <Drawer.Screen name="Settings" component={SettingsScreen} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;\n//hide-end\n')),(0,r.kt)("p",null,"Je kan ook ",(0,r.kt)("inlineCode",{parentName:"p"},"navigation.openDrawer")," en ",(0,r.kt)("inlineCode",{parentName:"p"},"navigation.closeDrawer")," gebruiken om de drawer te openen of sluiten."))}d.isMDXComponent=!0}}]);