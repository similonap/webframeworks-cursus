"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[2479],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(96540);const r={},s=o.createContext(r);function a(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(s.Provider,{value:n},e.children)}},83461:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"wf-course/react/hooks/custom-hooks","title":"custom hooks","description":"Wat zijn custom hooks?","source":"@site/docs/wf-course/react/hooks/custom-hooks.md","sourceDirName":"wf-course/react/hooks","slug":"/wf-course/react/hooks/custom-hooks","permalink":"/webframeworks-cursus/wf-course/react/hooks/custom-hooks","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":9999,"frontMatter":{"sidebar_position":9999},"sidebar":"wfCourse","previous":{"title":"useRef","permalink":"/webframeworks-cursus/wf-course/react/hooks/useRef"},"next":{"title":"Communicatie tussen componenten","permalink":"/webframeworks-cursus/wf-course/react/child-parent/"}}');var r=t(74848),s=t(28453);const a={sidebar_position:9999},i="custom hooks",c={},u=[{value:"Wat zijn custom hooks?",id:"wat-zijn-custom-hooks",level:2},{value:"Voorbeelden",id:"voorbeelden",level:2},{value:"useTimeout hook",id:"usetimeout-hook",level:3},{value:"useFetch hook",id:"usefetch-hook",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"custom-hooks",children:"custom hooks"})}),"\n",(0,r.jsx)(n.h2,{id:"wat-zijn-custom-hooks",children:"Wat zijn custom hooks?"}),"\n",(0,r.jsxs)(n.p,{children:["Custom hooks zijn een manier om herbruikbare logica in React te cre\xebren. Ze stellen je in staat om stateful logica te delen tussen componenten zonder de componenthi\xebrarchie te veranderen. Een custom hook is gewoon een JavaScript-functie die begint met het woord ",(0,r.jsx)(n.code,{children:"use"})," en andere hooks zoals ",(0,r.jsx)(n.code,{children:"useState"}),", ",(0,r.jsx)(n.code,{children:"useEffect"})," of zelfs andere custom hooks mag gebruiken."]}),"\n",(0,r.jsx)(n.p,{children:"Custom hooks helpen vooral wanneer je dezelfde logica meerdere keren nodig hebt, bijvoorbeeld voor het ophalen van data, het bijhouden van formulierstate of het luisteren naar browser-events. In plaats van die logica te kopi\xebren tussen componenten, stop je ze in een custom hook en roep je die hook aan waar nodig."}),"\n",(0,r.jsx)(n.h2,{id:"voorbeelden",children:"Voorbeelden"}),"\n",(0,r.jsx)(n.h3,{id:"usetimeout-hook",children:"useTimeout hook"}),"\n",(0,r.jsx)(n.p,{children:"Stel dat je de volgende component hebt met een useEffect die een interval instelt die elke seconde iets doet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'codesandbox={"template": "react-non-strict", "filename": "src/App.tsx"}',children:"import { useState, useEffect } from 'react';\n\nconst App = () => {\n    const [delay, setDelay] = useState(1000);\n    const [counter, setCounter] = useState(0);  \n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setCounter((prev) => prev + 1);\n        }, delay);\n\n        return () => clearTimeout(timer);\n    }, []);\n\n    return (\n        <div>\n            <p>Counter: {counter}</p>\n        </div>\n    );\n}\n//hide-start\nexport default App;\n//hide-end\n"})}),"\n",(0,r.jsx)(n.p,{children:"Stel dat je deze functionaliteit vaker nodig hebt. Bijvoorbeeld een ander component gebruikt de timer voor een klok te laten zien:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'codesandbox={"template": "react-non-strict", "filename": "src/App.tsx"}',children:"import { useState, useEffect } from 'react';\n\nconst App = () => {\n    const [delay, setDelay] = useState(1000);\n    const [time, setTime] = useState(new Date());  \n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setTime(new Date());\n        }, delay);\n\n        return () => clearTimeout(timer);\n    }, []);\n\n    return (\n        <div>\n            <p>Time: {time.toLocaleTimeString()}</p>\n        </div>\n    )\n}\n//hide-start\nexport default App;\n//hide-end\n"})}),"\n",(0,r.jsx)(n.p,{children:"Eigenlijk is grotendeel van de code hetzelfde. We kunnen deze logica in een custom hook stoppen:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'codesandbox={"template": "react-non-strict", "filename": "src/App.tsx"}',children:"import { useState, useEffect } from 'react';\n\ntype TimeoutCallback = () => void;\n\nconst useTimeout = (d: number, callback: TimeoutCallback) => {\n    const [delay, setDelay] = useState(d);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            callback();\n        }, delay);\n\n        return () => clearTimeout(timer);\n    }, []);\n}\n\nconst App = () => {\n    const [counter, setCounter] = useState(0);  \n    const [time, setTime] = useState(new Date());  \n\n    useTimeout(1000, () => setCounter((prev) => prev + 1));\n    useTimeout(1000, () => setTime(new Date()));\n\n    return (\n        <div>\n            <p>Counter: {counter}</p>\n            <p>Time: {time.toLocaleTimeString()}</p>\n        </div>\n    )\n}\n\n//hide-start\nexport default App;\n//hide-end\n"})}),"\n",(0,r.jsx)(n.p,{children:"Op deze manier wordt deze hook herbruikbaar in meerdere componenten zonder code te dupliceren. Je kan hem ook in een apart bestand zetten en importeren waar nodig."}),"\n",(0,r.jsx)(n.p,{children:"Je zou deze hook ook kunnen uitbreiden met extra functionaliteit, zoals het pauzeren of hervatten van de timer. Dan moet de functie ook een functie teruggeven die de timer stil zet (en terug start)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'codesandbox={"template": "react-non-strict", "filename": "src/App.tsx"}',children:"import { useState, useEffect } from 'react';\n\ntype TimeoutCallback = () => void;\n\ninterface UseTimeoutReturn {\n    pause: () => void;\n    resume: () => void;\n}\n\nconst useTimeout = (d: number, callback: TimeoutCallback): UseTimeoutReturn => {\n    const [delay, setDelay] = useState(d);\n    const [running, setRunning] = useState(true);\n\n    const pause = () => setRunning(false);\n    const resume = () => setRunning(true);\n\n    useEffect(() => {\n        if (!running) return;\n        const timer = setInterval(() => {\n            callback();\n        }, delay);\n\n        return () => clearTimeout(timer);\n    }, [running]);\n\n    return { pause, resume };\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"En dan kan je deze op de volgende manier in je component gebruiken:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const { pause, resume } = useTimeout(1000, () => setCounter((prev) => prev + 1));\n"})}),"\n",(0,r.jsx)(n.p,{children:"Je kan deze ook hernoemen naar iets anders op de volgende manier, zodat je meerdere useTimeout hooks kan gebruiken in hetzelfde component:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const { pause: pauseCounter, resume: resumeCounter } = useTimeout(1000, () => setCounter((prev) => prev + 1));\nconst { pause: pauseTime, resume: resumeTime } = useTimeout(1000, () => setTime(new Date()));\n"})}),"\n",(0,r.jsx)(n.h3,{id:"usefetch-hook",children:"useFetch hook"}),"\n",(0,r.jsxs)(n.p,{children:["Een heel interessante hook om te schrijven is een ",(0,r.jsx)(n.code,{children:"useFetch"})," hook die data ophaalt van een API en deze in de state plaatst. Deze hook kan ook loading en error states bijhouden."]}),"\n",(0,r.jsx)(n.p,{children:"De onderstaande hook illustreert dit:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",metastring:'codesandbox={"template": "react-non-strict", "filename": "src/App.tsx"}',children:"import { useState, useEffect } from 'react';\n\ntype FetchState<T> = {\n    data: T | null;\n    loading: boolean;\n    error: Error | null;\n}\n\nconst useFetch = <T,>(url: string): FetchState<T> => {\n    const [data, setData] = useState<T | null>(null);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<Error | null>(null);\n    const [trigger, setTrigger] = useState(0); \n\n    const refetch = () => setTrigger(t => t + 1); \n\n    useEffect(() => {\n        let cancelled = false;\n        const fetchData = async () => {\n            try {\n                setLoading(true);\n                const response = await fetch(url);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const result = await response.json();\n                if (cancelled) return;\n                setData(result);\n            } catch (err) {\n                setError(err as Error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            cancelled = true;\n        }\n    }, [url, trigger]);\n\n    return { data, loading, error, refetch };\n}\n\n//hide-start\ninterface Post {\n    userId: number;\n    id: number;\n    title: string;\n    body: string;\n}\n\nconst App = () => {\n    const { data, loading, error, refetch } = useFetch<Post[]>('https://jsonplaceholder.typicode.com/posts');\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error: {error.message}</p>;\n\n    return (\n        <div>\n            <button onClick={refetch}>Refetch</button>\n            <ul>\n                {data?.map(post => (\n                    <li key={post.id}>{post.title}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}   \n\nexport default App;\n//hide-end\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Er zijn verschillende libraries die gelijkaardige hooks aanbieden die veel uitgebreider zijn. Een voorbeeld hiervan is ",(0,r.jsx)(n.a,{href:"https://tanstack.com/query/v3/",children:"React Query"})," die een heleboel functionaliteit aanbiedt rond data fetching, caching, synchronisatie en updates in React applicaties. Of ",(0,r.jsx)(n.a,{href:"https://swr.vercel.app/",children:"SWR"})," van Vercel."]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);