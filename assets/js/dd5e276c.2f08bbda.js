"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[6663],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),g=r,m=d["".concat(l,".").concat(g)]||d[g]||p[g]||o;return n?a.createElement(m,s(s({ref:t},u),{},{components:n})):a.createElement(m,s({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3191:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},s="AsyncStorage",i={unversionedId:"react-native-course/extra/async-storage",id:"react-native-course/extra/async-storage",title:"AsyncStorage",description:"AsyncStorage is een manier om data op te slaan op de telefoon. Dit is een soort van lokale database. We kunnen hiermee data opslaan die we nodig hebben voor de app. Dit is zeer gelijkaardig aan de localStorage in een web browser.",source:"@site/docs/react-native-course/extra/async-storage.md",sourceDirName:"react-native-course/extra",slug:"/react-native-course/extra/async-storage",permalink:"/webframeworks-cursus/react-native-course/extra/async-storage",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"reactNative",previous:{title:"Extra",permalink:"/webframeworks-cursus/react-native-course/extra/"},next:{title:"Camera",permalink:"/webframeworks-cursus/react-native-course/extra/camera"}},l={},c=[{value:"Installatie",id:"installatie",level:2},{value:"Opslaan/uitlezen van een string",id:"opslaanuitlezen-van-een-string",level:2},{value:"Opslaan/uitlezen van een getal",id:"opslaanuitlezen-van-een-getal",level:2},{value:"Opslaan/uitlezen van een object",id:"opslaanuitlezen-van-een-object",level:2},{value:"Lezen van data bij mount",id:"lezen-van-data-bij-mount",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"asyncstorage"},"AsyncStorage"),(0,r.kt)("p",null,"AsyncStorage is een manier om data op te slaan op de telefoon. Dit is een soort van lokale database. We kunnen hiermee data opslaan die we nodig hebben voor de app. Dit is zeer gelijkaardig aan de ",(0,r.kt)("inlineCode",{parentName:"p"},"localStorage")," in een web browser."),(0,r.kt)("p",null,"Dit geeft het voordeel dat je data kan opslaan die je wil bijhouden als je de applicatie sluit."),(0,r.kt)("h2",{id:"installatie"},"Installatie"),(0,r.kt)("p",null,"Om AsyncStorage te gebruiken moeten we eerst de ",(0,r.kt)("inlineCode",{parentName:"p"},"@react-native-async-storage/async-storage")," library installeren:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npx expo install @react-native-async-storage/async-storage\n")),(0,r.kt)("h2",{id:"opslaanuitlezen-van-een-string"},"Opslaan/uitlezen van een string"),(0,r.kt)("p",null,"Om een string op te slaan in AsyncStorage gebruiken we de ",(0,r.kt)("inlineCode",{parentName:"p"},"setItem")," functie. Deze functie heeft twee parameters: de key en de value. De key is een string die we gebruiken om de value later terug op te halen. De value is de string die we willen opslaan."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'expo={"dependencies":"@react-native-async-storage/async-storage"}',expo:'{"dependencies":"@react-native-async-storage/async-storage"}'},"import React from 'react';\n\nimport { View, Text, Button } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst storeData = async () => {\n  await AsyncStorage.setItem('name', 'John Doe');\n};\n\nconst getData = async () => {\n  const value = await AsyncStorage.getItem('name');\n  if (value !== null) {\n    alert(value);\n  } else {\n    alert(\"No Data found\");\n  }\n};\nconst App = () => {\n  return (\n    <View>\n      <Text>AsyncStorage</Text>\n      <Button title=\"Store Data\" onPress={storeData} />\n      <Button title=\"Load Data\" onPress={getData } />\n    </View>\n  );\n};\n\nexport default App;\n")),(0,r.kt)("h2",{id:"opslaanuitlezen-van-een-getal"},"Opslaan/uitlezen van een getal"),(0,r.kt)("p",null,"Wil je een getal rechtstreeks opslagen in AsyncStorage dan moet je eerst de waarde omzetten naar een string. Dit kan je doen met de ",(0,r.kt)("inlineCode",{parentName:"p"},"toString")," functie. Om een getal terug te halen uit AsyncStorage moet je eerst de string omzetten naar een getal. Dit kan je doen met de ",(0,r.kt)("inlineCode",{parentName:"p"},"parseInt")," functie."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'expo={"dependencies":"@react-native-async-storage/async-storage"}',expo:'{"dependencies":"@react-native-async-storage/async-storage"}'},"import React from 'react';\n\nimport { View, Text, Button } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst storeData = async () => {\n  let randomNumber : number = Math.floor(Math.random() * 100);\n  await AsyncStorage.setItem('randomNumber', randomNumber.toString());\n};\n\nconst getData = async () => {\n  const value : string = await AsyncStorage.getItem('randomNumber');\n  if (value !== null) {\n    alert(parseInt(value));\n  } else {\n    alert(\"No Data found\");\n  }\n};\nconst App = () => {\n  return (\n    <View>\n      <Text>AsyncStorage</Text>\n      <Button title=\"Store Data\" onPress={storeData} />\n      <Button title=\"Load Data\" onPress={getData } />\n    </View>\n  );\n};\n\nexport default App;\n")),(0,r.kt)("h2",{id:"opslaanuitlezen-van-een-object"},"Opslaan/uitlezen van een object"),(0,r.kt)("p",null,"Om een object op te slaan in AsyncStorage moet je eerst het object omzetten naar een string. Dit kan je doen met de ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON.stringify")," functie. Om een object terug te halen uit AsyncStorage moet je eerst de string omzetten naar een object. Dit kan je doen met de ",(0,r.kt)("inlineCode",{parentName:"p"},"JSON.parse")," functie."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'expo={"dependencies":"@react-native-async-storage/async-storage"}',expo:'{"dependencies":"@react-native-async-storage/async-storage"}'},'import React from \'react\';\n\nimport { View, Text, Button } from \'react-native\';\nimport AsyncStorage from \'@react-native-async-storage/async-storage\';\n\ninterface Student {\n  name: string;\n  age: number;\n}\n\nconst storeData = async () => {\n  let student : Student = {\n    name: "John Doe",\n    age: Math.floor(Math.random() * 10) + 18\n  };\n  await AsyncStorage.setItem(\'randomStudent\', JSON.stringify(student));\n};\n\nconst getData = async () => {\n  const value : string = await AsyncStorage.getItem(\'randomStudent\');\n  if (value !== null) {\n    let student : Student = JSON.parse(value);\n    alert(student.name + " is " + student.age + " years old");\n  } else {\n    alert("No Data found");\n  }\n};\nconst App = () => {\n  return (\n    <View>\n      <Text>AsyncStorage</Text>\n      <Button title="Store Data" onPress={storeData} />\n      <Button title="Load Data" onPress={getData } />\n    </View>\n  );\n};\n\nexport default App;\n')),(0,r.kt)("h2",{id:"lezen-van-data-bij-mount"},"Lezen van data bij mount"))}p.isMDXComponent=!0}}]);