"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"wfCourse":[{"type":"category","label":"Inleiding","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Web Frameworks","href":"/webframeworks-cursus/wf-course/inleiding/web-frameworks","docId":"wf-course/inleiding/web-frameworks"},{"type":"link","label":"Single Page Applications","href":"/webframeworks-cursus/wf-course/inleiding/single-page-applications","docId":"wf-course/inleiding/single-page-applications"}],"href":"/webframeworks-cursus/"},{"type":"category","label":"TypeScript Revisited","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Arrays/Objecten kopieren","href":"/webframeworks-cursus/wf-course/typescript-revisited/arrays-objecten-kopieren","docId":"wf-course/typescript-revisited/arrays-objecten-kopieren"},{"type":"link","label":"Optional chaining","href":"/webframeworks-cursus/wf-course/typescript-revisited/optional-chaining","docId":"wf-course/typescript-revisited/optional-chaining"},{"type":"link","label":"Lazy evaluation","href":"/webframeworks-cursus/wf-course/typescript-revisited/lazy-evaluation","docId":"wf-course/typescript-revisited/lazy-evaluation"},{"type":"link","label":"Array/Object Destructuring","href":"/webframeworks-cursus/wf-course/typescript-revisited/array-object-destructuring","docId":"wf-course/typescript-revisited/array-object-destructuring"},{"type":"link","label":"Callbacks/Function types","href":"/webframeworks-cursus/wf-course/typescript-revisited/callbacks-function-types","docId":"wf-course/typescript-revisited/callbacks-function-types"},{"type":"link","label":"Array Methoden","href":"/webframeworks-cursus/wf-course/typescript-revisited/array-methoden","docId":"wf-course/typescript-revisited/array-methoden"},{"type":"category","label":"Collections","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Dictionary","href":"/webframeworks-cursus/wf-course/typescript-revisited/collections/dictionary","docId":"wf-course/typescript-revisited/collections/dictionary"},{"type":"link","label":"Sets","href":"/webframeworks-cursus/wf-course/typescript-revisited/collections/sets","docId":"wf-course/typescript-revisited/collections/sets"}],"href":"/webframeworks-cursus/wf-course/typescript-revisited/collections/"},{"type":"link","label":"Immutability","href":"/webframeworks-cursus/wf-course/typescript-revisited/immutability","docId":"wf-course/typescript-revisited/immutability"},{"type":"link","label":"Modules","href":"/webframeworks-cursus/wf-course/typescript-revisited/modules","docId":"wf-course/typescript-revisited/modules"}],"href":"/webframeworks-cursus/wf-course/typescript-revisited/"},{"type":"link","label":"Create React App","href":"/webframeworks-cursus/wf-course/create-react-app/","docId":"wf-course/create-react-app/README"},{"type":"category","label":"TSX","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Statische bestanden","href":"/webframeworks-cursus/wf-course/tsx/static","docId":"wf-course/tsx/static"}],"href":"/webframeworks-cursus/wf-course/tsx/"},{"type":"link","label":"Lijsten","href":"/webframeworks-cursus/wf-course/lijsten/","docId":"wf-course/lijsten/README"},{"type":"category","label":"Componenten","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Props","href":"/webframeworks-cursus/wf-course/componenten/props","docId":"wf-course/componenten/props"},{"type":"link","label":"Folder structuur","href":"/webframeworks-cursus/wf-course/componenten/opsplitsen","docId":"wf-course/componenten/opsplitsen"},{"type":"link","label":"Styling","href":"/webframeworks-cursus/wf-course/componenten/stylen","docId":"wf-course/componenten/stylen"}],"href":"/webframeworks-cursus/wf-course/componenten/"},{"type":"link","label":"Event Handling","href":"/webframeworks-cursus/wf-course/event-handling/","docId":"wf-course/event-handling/README"},{"type":"category","label":"State","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Regels van useState","href":"/webframeworks-cursus/wf-course/state/regels","docId":"wf-course/state/regels"},{"type":"link","label":"Formulieren","href":"/webframeworks-cursus/wf-course/state/forms","docId":"wf-course/state/forms"},{"type":"link","label":"Arrays en objecten in state","href":"/webframeworks-cursus/wf-course/state/complexstate","docId":"wf-course/state/complexstate"}],"href":"/webframeworks-cursus/wf-course/state/"},{"type":"category","label":"Hooks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"useEffect","href":"/webframeworks-cursus/wf-course/hooks/useEffect","docId":"wf-course/hooks/useEffect"}],"href":"/webframeworks-cursus/wf-course/hooks/"},{"type":"link","label":"Client-side routering","href":"/webframeworks-cursus/wf-course/routing/","docId":"wf-course/routing/README"},{"type":"category","label":"Communicatie tussen componenten","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Context","href":"/webframeworks-cursus/wf-course/child-parent/context","docId":"wf-course/child-parent/context"}],"href":"/webframeworks-cursus/wf-course/child-parent/"},{"type":"link","label":"Recepten voor React.js","href":"/webframeworks-cursus/wf-course/recepten/","docId":"wf-course/recepten/README"},{"type":"category","label":"Handige Tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"JSON Server","href":"/webframeworks-cursus/wf-course/tools/jsonserver","docId":"wf-course/tools/jsonserver"}],"href":"/webframeworks-cursus/wf-course/tools/"}],"wfLab":[{"type":"link","label":"Labo materiaal","href":"/webframeworks-cursus/wf-lab/","docId":"wf-lab/README"},{"type":"link","label":"Labo 1","href":"/webframeworks-cursus/wf-lab/lab1","docId":"wf-lab/lab1"}]},"docs":{"wf-course/child-parent/context":{"id":"wf-course/child-parent/context","title":"Context","description":"Delen van data via context","sidebar":"wfCourse"},"wf-course/child-parent/README":{"id":"wf-course/child-parent/README","title":"Communicatie tussen componenten","description":"Communicatie tussen verschillende componenten is een van de moeilijkste dingen in React. We raden je aan om altijd eerst zoveel mogelijk te werken met grote componenten en die dan pas op te splitsen alles functioneel is. Zo kan je vaak voorkomen dat je verschillende componenten nodig hebt.","sidebar":"wfCourse"},"wf-course/componenten/opsplitsen":{"id":"wf-course/componenten/opsplitsen","title":"Folder structuur","description":"Tot nu toe stond al onze React code in het App.tsx bestand. Zelfs al hadden we meerdere componenten dan zaten die ook allemaal in dit bestand vervat. Als alle code in hetzelfde bestand staat, is het moeilijk om de code terug te vinden die op een gegeven moment belangrijk is. Bovendien is het dan ook niet mogelijk \xe9\xe9n component te herbruiken zonder de code van andere componenten over te nemen.","sidebar":"wfCourse"},"wf-course/componenten/props":{"id":"wf-course/componenten/props","title":"Props","description":"Componenten staan meestal niet zomaar op zichzelf. Vaak hebben ze data nodig dat van buitenaf komt. Afhankelijk van welke data er doorgegeven wordt aan het component zal het zich anders gedragen. Deze data worden doorgeven aan der hand van properties (of props in het kort).","sidebar":"wfCourse"},"wf-course/componenten/README":{"id":"wf-course/componenten/README","title":"Componenten","description":"Code die gegenereerd wordt door create-react-app bevat \xe9\xe9n hoofdfunctie: App. Het is mogelijk alle code onder te brengen in deze functie, maar dan is het niet meer mogelijk (bijvoorbeeld in een later project) een onderdeeltje van de applicatie te herbruiken. Het is beter de applicatie op te splitsen in kleine herbruikbare blokjes. Deze herbruikbare blokjes heten componenten.","sidebar":"wfCourse"},"wf-course/componenten/stylen":{"id":"wf-course/componenten/stylen","title":"Styling","description":"Er zijn verschillende manieren om stylesheets toe te passen op React applicaties. De twee belangrijkste zijn:","sidebar":"wfCourse"},"wf-course/create-react-app/README":{"id":"wf-course/create-react-app/README","title":"Create React App","description":"Create React App","sidebar":"wfCourse"},"wf-course/event-handling/README":{"id":"wf-course/event-handling/README","title":"Event Handling","description":"Text Input","sidebar":"wfCourse"},"wf-course/hooks/README":{"id":"wf-course/hooks/README","title":"Hooks","description":"Componenten ontvangen informatie van hun oudercomponenten via props. Dit biedt de basisstructuur, maar om een interactieve applicatie te ontwikkelen, volstaat het niet alleen data te herbruiken. Het is ook nodig data te kunnen wijzigen of uit te lezen uit andere bronnen dan de props, bijvoorbeeld uit een database of uit de URL. Hiervoor wordt een groep functies gebruikt die we in componenten kunnen integreren. Deze functies heten hooks.","sidebar":"wfCourse"},"wf-course/hooks/useEffect":{"id":"wf-course/hooks/useEffect","title":"useEffect","description":"Side effects","sidebar":"wfCourse"},"wf-course/inleiding/README":{"id":"wf-course/inleiding/README","title":"Inleiding","description":"","sidebar":"wfCourse"},"wf-course/inleiding/single-page-applications":{"id":"wf-course/inleiding/single-page-applications","title":"Single Page Applications","description":"In deze cursus gaan we voornamelijk kijken naar het meest gebruikte Single Page Applications framework namelijk React.js (ontwikkeld door Meta). Er zijn nog vele andere SPA-frameworks zoals Angular (door Google) en Vue.js. Deze frameworks laten het toe om eenvoudig uitgebreidere applicaties te maken dan met gewone JavaScript en algemene frameworks zoals jQuery.","sidebar":"wfCourse"},"wf-course/inleiding/web-frameworks":{"id":"wf-course/inleiding/web-frameworks","title":"Web Frameworks","description":"In principe kan je met HTML, CSS en JavaScript elke website die je maar kan bedenken laten werken. Dat geldt zowel voor de frontend als de backend. In de praktijk is dit voor complexe applicaties niet haalbaar. Een fontend met heel veel onderling afhankelijke elementen scripten met alleen JavaScript is onnoemelijk complex. Een backend zelf HTTP requests volledig laten ontleden is dat ook.","sidebar":"wfCourse"},"wf-course/lijsten/README":{"id":"wf-course/lijsten/README","title":"Lijsten","description":"Lijsten in React","sidebar":"wfCourse"},"wf-course/recepten/README":{"id":"wf-course/recepten/README","title":"Recepten voor React.js","description":"Hier komen extra voorbeelden die gebruik gaan maken van de leerstof die we over verschillende hoofdstukken gezien hebben. Deze voorbeelden horen dus niet bij een bepaald hoofdstuk.","sidebar":"wfCourse"},"wf-course/routing/README":{"id":"wf-course/routing/README","title":"Client-side routering","description":"Twee soorten routering","sidebar":"wfCourse"},"wf-course/state/complexstate":{"id":"wf-course/state/complexstate","title":"Arrays en objecten in state","description":"Tot nu toe hebben we enkel gebruik gemaakt van een primitieve waarde in de state. Zo is de werking van number, string en boolean vrij gelijkaardig en moeten we deze niet in detail behandelen.","sidebar":"wfCourse"},"wf-course/state/forms":{"id":"wf-course/state/forms","title":"Formulieren","description":"Om met form elements te werken in React is het bijna altijd aangewezen om een state aan te maken die up to date wordt gehouden met de waarde van het invoer element. Op deze manier kunnen andere manieren voorzien worden om het inputveld te wijzigen, zoals een knop om de input leeg te maken, een handler die ingetypte tekst automatisch omzet naar hoofdletters, enzovoort.","sidebar":"wfCourse"},"wf-course/state/README":{"id":"wf-course/state/README","title":"State","description":"State en Props zijn een van de meest essenti\xeble concepten die je moet begrijpen in React. Props dienen om informatie door een componenten structuur te geven, en state wordt gebruikt om applicaties interactief te maken. State wordt gebruikt om informatie bij te houden en deze aan te passen over de looptijd van je applicatie.","sidebar":"wfCourse"},"wf-course/state/regels":{"id":"wf-course/state/regels","title":"Regels van useState","description":"Je mag geen useState hook gebruiken in:","sidebar":"wfCourse"},"wf-course/tools/jsonserver":{"id":"wf-course/tools/jsonserver","title":"JSON Server","description":"We gaan in deze cursus vaak moeten gebruik maken van een JSON API. Omdat deze over het algemeen fictieve data bevat of de echte API gelimiteerd is (maximaal aantal API calls,...) gaan we meestal gebruik maken van json-server die het mogelijk maakt een json bestand te gebruiken als API.","sidebar":"wfCourse"},"wf-course/tools/README":{"id":"wf-course/tools/README","title":"Handige Tools","description":"","sidebar":"wfCourse"},"wf-course/tsx/README":{"id":"wf-course/tsx/README","title":"TSX","description":"TSX is eigenlijk TypeScript code. Dus is het mogelijk TypeScript-expressies te integreren in de gegenereerde output. Als we de title variabele willen renderen tussen de h1 tags kunnen we deze als volgt toevoegen:","sidebar":"wfCourse"},"wf-course/tsx/static":{"id":"wf-course/tsx/static","title":"Statische bestanden","description":"In react kan je net zoals in HTML afbeeldingen gebruiken. Dit doe je door de ` tag te gebruiken. Je kan de src property gebruiken om de afbeelding te kiezen. Je kan ook de alt` property gebruiken om een alternatieve tekst te geven als de afbeelding niet geladen kan worden.","sidebar":"wfCourse"},"wf-course/typescript-revisited/array-methoden":{"id":"wf-course/typescript-revisited/array-methoden","title":"Array Methoden","description":"Het is belangrijk om te weten dat in React.js bijna nooit gewone for lussen worden gebruikt. Het is vaak mogelijk om ze te gebruiken, maar het maakt de code bijna onleesbaar. Daarom is het kennen van array methoden een van de belangrijkste dingen die je moet kennen voordat je met React.js kan beginnen.&#x20;","sidebar":"wfCourse"},"wf-course/typescript-revisited/array-object-destructuring":{"id":"wf-course/typescript-revisited/array-object-destructuring","title":"Array/Object Destructuring","description":"Vaak willen we bepaalde delen van een object of array op een gemakkelijke manier aanspreken zonder dit uitdrukkelijk te doen aan de hand van de dot notatie (bij objecten) en de index (bij arrays)","sidebar":"wfCourse"},"wf-course/typescript-revisited/arrays-objecten-kopieren":{"id":"wf-course/typescript-revisited/arrays-objecten-kopieren","title":"Arrays/Objecten kopieren","description":"Arrays kopi\xebren","sidebar":"wfCourse"},"wf-course/typescript-revisited/callbacks-function-types":{"id":"wf-course/typescript-revisited/callbacks-function-types","title":"Callbacks/Function types","description":"Een callback is een functie (functie A) die wordt meegegeven als parameter van een andere functie (functie B). Deze functie (B) zal dan de meegegeven functie (A) uitvoeren.","sidebar":"wfCourse"},"wf-course/typescript-revisited/collections/dictionary":{"id":"wf-course/typescript-revisited/collections/dictionary","title":"Dictionary","description":"Soms weet je niet op voorhand welke keys en values een bepaald object gaat bevatten. Dit is bijvoorbeeld het geval bij dictionaries. Een dictionary is een ongeordende data structuur die een verzameling elementen bevat. Om een element te vinden, moet je de \\"key\\" sleutel van een element kennen.","sidebar":"wfCourse"},"wf-course/typescript-revisited/collections/README":{"id":"wf-course/typescript-revisited/collections/README","title":"Collections","description":"","sidebar":"wfCourse"},"wf-course/typescript-revisited/collections/sets":{"id":"wf-course/typescript-revisited/collections/sets","title":"Sets","description":"Soms wil je voorkomen dat bepaalde waarden meerdere keren voorkomen in een lijst. Je zou hiervoor elke keer kunnen nakijken of een bepaalde waarde al in de array zit zoals hieronder:","sidebar":"wfCourse"},"wf-course/typescript-revisited/immutability":{"id":"wf-course/typescript-revisited/immutability","title":"Immutability","description":"Immutability of onveranderlijkheid is een heel belangrijk concept dat je onder de knie moet hebben. Eigenlijk is het een heel eenvoudig concept:","sidebar":"wfCourse"},"wf-course/typescript-revisited/lazy-evaluation":{"id":"wf-course/typescript-revisited/lazy-evaluation","title":"Lazy evaluation","description":"Een belangrijk concept om te kennen in TypeScript is het concept van Lazy Evaluation. Dit wil zeggen dat een expressie niet helemaal wordt ge\xebvalueerd als het voorgaande deel al undefined/null of false is.","sidebar":"wfCourse"},"wf-course/typescript-revisited/modules":{"id":"wf-course/typescript-revisited/modules","title":"Modules","description":"Hoe modules gebruiken in TypeScript?","sidebar":"wfCourse"},"wf-course/typescript-revisited/optional-chaining":{"id":"wf-course/typescript-revisited/optional-chaining","title":"Optional chaining","description":"Optional","sidebar":"wfCourse"},"wf-course/typescript-revisited/README":{"id":"wf-course/typescript-revisited/README","title":"TypeScript Revisited","description":"Voordat we kunnen beginnen met React.js is het belangrijk om een aantal concepten van TypeScript nog eens te herhalen.","sidebar":"wfCourse"},"wf-lab/lab1":{"id":"wf-lab/lab1","title":"Labo 1","description":"1. Expressies","sidebar":"wfLab"},"wf-lab/README":{"id":"wf-lab/README","title":"Labo materiaal","description":"","sidebar":"wfLab"}}}')}}]);