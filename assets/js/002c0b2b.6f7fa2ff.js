"use strict";(self.webpackChunkwebframeworks_cursus=self.webpackChunkwebframeworks_cursus||[]).push([[712],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=l(t),m=a,g=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return t?r.createElement(g,s(s({ref:n},p),{},{components:t})):r.createElement(g,s({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1128:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=t(7462),a=(t(7294),t(3905));const o={},s="Extra voorbeelden",i={unversionedId:"wf-course/react/state/voorbeelden",id:"wf-course/react/state/voorbeelden",title:"Extra voorbeelden",description:"Language selector",source:"@site/docs/wf-course/react/state/voorbeelden.md",sourceDirName:"wf-course/react/state",slug:"/wf-course/react/state/voorbeelden",permalink:"/webframeworks-cursus/wf-course/react/state/voorbeelden",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"wfCourse",previous:{title:"State",permalink:"/webframeworks-cursus/wf-course/react/state/"},next:{title:"Hooks",permalink:"/webframeworks-cursus/wf-course/react/hooks/"}},c={},l=[{value:"Language selector",id:"language-selector",level:2},{value:"Zoeken, filteren en sorteren",id:"zoeken-filteren-en-sorteren",level:2},{value:"Toevoegen in een lijst",id:"toevoegen-in-een-lijst",level:2}],p={toc:l};function u(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"extra-voorbeelden"},"Extra voorbeelden"),(0,a.kt)("h2",{id:"language-selector"},"Language selector"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'codesandbox={"template": "react", "filename": "src/App.tsx"}',codesandbox:'{"template":','"react",':!0,'"filename":':!0,'"src/App.tsx"}':!0},'import {useState} from "react";\n\ninterface Translation {\n  [language: string]: string\n}\n\ninterface Translations {\n  key: string,\n  translations: Translation\n}\n\nlet translations : Translations[] = [\n  {\n    key: "welcome",\n    translations: {\n      "NL": "Welkom op de website.",\n      "EN": "Welcome to the website.",\n      "FR": "Bienvenue sur le site."\n    }\n  },\n  {\n    key: "language",\n    translations: {\n      "NL": "Deze website is volledig vertaald in het Nederlands.",\n      "EN": "This website is fully translated into english.",\n      "FR": "Ce site est enti\xe8rement traduit en francais."\n    }\n  }\n]\n\nconst getTranslation = (language: string, key: string) => {\n  return translations.find(t => t.key === key)?.translations[language];\n}\n\nconst App = () => {\n  const [language, setLanguage] = useState("NL");\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => setLanguage("NL")}>NL</button>\n        <button onClick={() => setLanguage("EN")}>EN</button>\n        <button onClick={() => setLanguage("FR")}>FR</button>\n      </div>\n      <h1>{getTranslation(language, "welcome")}</h1>\n      <p>{getTranslation(language, "language")}</p>\n    </div>\n  )\n\n}\nexport default App;\n')),(0,a.kt)("h2",{id:"zoeken-filteren-en-sorteren"},"Zoeken, filteren en sorteren"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'codesandbox={"template": "react", "filename": "src/App.tsx"}',codesandbox:'{"template":','"react",':!0,'"filename":':!0,'"src/App.tsx"}':!0},'import React, { useState } from "react";\n\ninterface Item {\n    name: string;\n    price: number;\n    inStock: boolean;\n}\n\nconst GoodsList = ({goods} : {goods: Item[]}) => {\n    const [searchField, setSearchField] = useState("");\n    const [stockOnly, setStockOnly] = useState(false);\n    const [sortField, setSortField] = useState("name");\n\n    let filteredGoods = goods.filter((item) => item.name.toUpperCase().startsWith(searchField.toUpperCase()));\n    if (stockOnly) {\n        filteredGoods = filteredGoods.filter((item) => item.inStock);\n    }\n    \n    const sortedGoods = filteredGoods.sort((a, b) => {\n      switch (sortField) {\n        case "price":\n          return a.price - b.price;\n        case "inStock":\n          return Number(a.inStock) - Number(b.inStock);\n        case "name":\n          return a.name.localeCompare(b.name);\n        default:\n          return 0;\n      }\n    });\n\n    return (\n        <div>\n            <div>\n                <input placeholder="search" type="text" value={searchField} onChange={(event) => setSearchField(event.target.value)}  />\n                <input type="checkbox" checked={stockOnly} onChange={(e) => setStockOnly(e.target.checked)}/> Show only in stock\n            </div>\n            <div>\n              <select onChange={(e) => setSortField(e.target.value)} value={sortField}>\n                <option value="name">Name</option>\n                <option value="price">Price</option>\n                <option value="inStock">In stock</option>\n              </select>\n\n            </div>\n            <div style={{display: "grid", gridTemplateColumns: "300px 100px"}}>\n                {sortedGoods.map((item) => (\n                    <React.Fragment key={item.name}>\n                        <span style={{color: item.inStock ? "black" : "red"}}>{item.name}</span>\n                        <span>\u20ac {item.price}</span>\n                    </React.Fragment>))}\n            </div>\n        </div>\n    );\n}\n\nconst App = () => {\n    let goods : Item[] = [\n        {\n            name: "iPhone 12",\n            price: 699,\n            inStock: false\n        },\n        {\n            name: "iPhone 12 Pro",\n            price: 999,\n            inStock: true\n        },\n        {\n            name: "iPhone 12 Pro Max",\n            price: 1099,\n            inStock: true\n        },\n        {\n            name: "Samsung Galaxy S20",\n            price: 799,\n            inStock: true\n        },\n        {\n            name: "Samsung Galaxy S10",\n            price: 699,\n            inStock: false\n        },\n        {\n            name: "Samsung Galaxy S20 Ultra",\n            price: 999,\n            inStock: true\n        },\n        {\n            name: "Huawei P30",\n            price: 499,\n            inStock: true\n        },\n        {\n            name: "Huawei P40",\n            price: 599,\n            inStock: true\n        },\n        {\n            name: "Nokia 3310",\n            price: 399,\n            inStock: false\n        }\n\n    ]\n\n    return <GoodsList goods={goods}/>\n\n}\n\nexport default App;\n')),(0,a.kt)("h2",{id:"toevoegen-in-een-lijst"},"Toevoegen in een lijst"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'codesandbox={"template": "react", "filename": "src/App.tsx"}',codesandbox:'{"template":','"react",':!0,'"filename":':!0,'"src/App.tsx"}':!0},'import React, { useState } from "react";\n\ninterface Item {\n    name: string;\n    price: number;\n    inStock: boolean;\n}\n\nconst GoodsList = ({goods : propsGood} : {goods: Item[]}) => {\n    const [goods, setGoods] = useState(propsGood);\n    const [productName, setProductName] = useState("");\n    const [price, setPrice] = useState(500);\n    const [inStock, setInStock] = useState(false);\n\n    const addProduct : React.FormEventHandler<HTMLFormElement> = (e) => {\n        e.preventDefault();\n        setGoods([...goods, {name: productName, price: price, inStock: inStock}]);\n        setProductName("");\n        setPrice(0);\n        setInStock(false);\n    }\n\n    return (\n        <div>\n            <div>\n                <form onSubmit={addProduct} style={{display: "grid", gridTemplateColumns: "200px 200px"}}>\n                <label>Product name: </label><input placeholder="product name" type="text" value={productName} onChange={(event) => setProductName(event.target.value)} />\n                <label>Price: </label><input placeholder="price" type="number" value={price} onChange={(event) => setPrice(parseInt(event.target.value))} />\n                <label>In stock? </label><input type="checkbox" checked={inStock} onChange={(event) => setInStock(event.target.checked)} /> \n                <input type="submit" value="Add product" style={{gridColumnStart: 1, gridColumnEnd: "span 2"}}/>\n                </form>\n            </div>\n            <div style={{display: "grid", gridTemplateColumns: "300px 100px"}}>\n                {goods.map((item) => (\n                    <React.Fragment key={item.name}>\n                        <span style={{color: item.inStock ? "black" : "red"}}>{item.name}</span>\n                        <span>\u20ac {item.price}</span>\n                    </React.Fragment>))}\n            </div>\n        </div>\n    );\n}\n\nconst App = () => {\n    let goods : Item[] = [\n        {\n            name: "iPhone 12",\n            price: 699,\n            inStock: false\n        },\n        {\n            name: "iPhone 12 Pro",\n            price: 999,\n            inStock: true\n        },\n        {\n            name: "iPhone 12 Pro Max",\n            price: 1099,\n            inStock: true\n        },\n        {\n            name: "Samsung Galaxy S20",\n            price: 799,\n            inStock: true\n        },\n        {\n            name: "Samsung Galaxy S10",\n            price: 699,\n            inStock: false\n        },\n        {\n            name: "Samsung Galaxy S20 Ultra",\n            price: 999,\n            inStock: true\n        },\n        {\n            name: "Huawei P30",\n            price: 499,\n            inStock: true\n        },\n        {\n            name: "Huawei P40",\n            price: 599,\n            inStock: true\n        },\n        {\n            name: "Nokia 3310",\n            price: 399,\n            inStock: false\n        }\n\n    ]\n\n    return <GoodsList goods={goods}/>\n\n}\n\nexport default App;\n')))}u.isMDXComponent=!0}}]);